apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.themoviedemo"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kapt {
        correctErrorTypes = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // support library
    implementation 'androidx.appcompat:appcompat:' + String.valueOf(accompatVersion)
    implementation 'com.google.android.material:material:' + String.valueOf(materialVersion)
    implementation 'androidx.palette:palette:' + String.valueOf(androidxVersion)
    implementation 'androidx.cardview:cardview:' + String.valueOf(androidxVersion)
    implementation 'androidx.recyclerview:recyclerview:' + String.valueOf(androidxVersion)
//    implementation 'androidx.core:core-ktx:1.1.0-alpha03'
//    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // kotlin
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:' + String.valueOf(kotlinVersion)
    implementation 'org.jetbrains.anko:anko:' + String.valueOf(ankoVersion)

    // architecture components
    implementation 'androidx.lifecycle:lifecycle-extensions:' + String.valueOf(archCompomentVersion)
    implementation 'androidx.room:room-runtime:' + String.valueOf(roomVersion)
    kapt 'androidx.room:room-compiler:' + String.valueOf(roomVersion)
    testImplementation 'androidx.arch.core:core-testing:' + String.valueOf(archCompomentVersion)

    // dependency injection
    implementation 'com.google.dagger:dagger:' + String.valueOf(daggerVersion)
    implementation 'com.google.dagger:dagger-android:' + String.valueOf(daggerVersion)  //    If you're using classes in dagger.android you'll also want to include:
    implementation 'com.google.dagger:dagger-android-support:' + String.valueOf(daggerVersion)   //    If you're using classes in dagger.android you'll also want to include:
    kapt 'com.google.dagger:dagger-compiler:' + String.valueOf(daggerVersion)
    kapt 'com.google.dagger:dagger-android-processor:' + String.valueOf(daggerVersion)   //    If you're using classes in dagger.android you'll also want to include:

    // network
    implementation 'com.squareup.retrofit2:retrofit:' + String.valueOf(retrofitVersion)
    implementation 'com.squareup.retrofit2:converter-gson:' + String.valueOf(retrofitVersion)
    implementation 'com.squareup.okhttp3:logging-interceptor:' + String.valueOf(okhttpVersion)
    implementation 'com.google.code.gson:gson:' + String.valueOf(retrofitVersion)
    testImplementation 'com.squareup.okhttp3:mockwebserver:' + String.valueOf(okhttpVersion)

    // glide
    implementation 'com.github.bumptech.glide:glide:' + String.valueOf(glideVersion)
    implementation 'com.github.florent37:glidepalette:' + String.valueOf(glidePaletteVersion)
    kapt 'com.github.bumptech.glide:compiler:' + String.valueOf(glideVersion)

    // adapter
    implementation 'com.github.skydoves:baserecyclerviewadapter:' + String.valueOf(baseAdapterVersion)

    // debugging
    implementation 'com.jakewharton.timber:timber:' + String.valueOf(timberVersion)
    implementation 'com.facebook.stetho:stetho:' + String.valueOf(stethoVersion)
    implementation 'com.facebook.stetho:stetho-okhttp3:' + String.valueOf(stethoVersion)

    // custom view
    implementation 'devlight.io:navigationtabbar:' + String.valueOf(navigationBarVersion)
    implementation 'co.lujun:androidtagview:' + String.valueOf(androidTagViewVersion)
    implementation 'com.ms-square:expandableTextView:' + String.valueOf(expandableTextViewVersion)

    // unit test
    testImplementation 'junit:junit:' + String.valueOf(junitVersion)
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:' + String.valueOf(mockitoKotlinVersion)
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    androidTestImplementation 'androidx.test:runner:1.1.1'
}
